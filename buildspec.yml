version: 0.2
env:
  variables:
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "586794446862"
    REPOSITORY_NAME: "meusite"
    IMAGE_TAG: "latest"

phases:
  install:
    commands:
      - echo "Instalando dependências e ferramentas..."
      - aws --version
      - echo "Instalando Docker..."
      - yum install docker -y
      - service docker start
      - echo "Baixando e instalando o .NET Core SDK 3.1"
      - curl -sSL https://dotnet.microsoft.com/download/dotnet-core/scripts/v1/dotnet-install.sh | bash /dev/stdin --channel 3.1

  pre_build:
    commands:
      - echo "Login no ECR"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME
      - echo "Restaurando dependências do projeto .NET..."
      - ~/.dotnet/dotnet restore

  build:
    commands:
      - echo "Compilando e publicando o aplicativo .NET..."
      - ~/.dotnet/dotnet publish -c Release -o out
      - echo "Construindo a imagem Docker..."
      - docker build -t $REPOSITORY_NAME:$IMAGE_TAG .
      - docker tag $REPOSITORY_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Gerando o arquivo imagedefinitions.json..."
      - printf '[{"name":"meusite", "imageUri":"%s.dkr.ecr.%s.amazonaws.com/%s:%s" } ]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - echo "Subindo a imagem para o ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$IMAGE_TAG

artifacts:
  files:
    - imagedefinitions.json
